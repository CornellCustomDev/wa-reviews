id: akn7bn
name: 'Iframe with interactive elements is not excluded from tab-order'
metadata:
    id: akn7bn
    name: 'Iframe with interactive elements is not excluded from tab-order'
    rule_type: atomic
    description: "This rule checks that `iframe` elements which contain an interactive (tabbable) element are not excluded from sequential focus navigation.\n"
    accessibility_requirements: { 'wcag20:2.1.1': { forConformance: true, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' }, 'wcag-technique:G202': { forConformance: false, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' } }
    input_aspects: ['DOM Tree', 'CSS Styling']
    acknowledgments: { authors: ['Brian Bors', 'Wilco Fiers'], funding: [WAI-Tools] }
applicability: "This rule applies to any `iframe` element that is not inert and that [contains](#akn7bn:contain) at least one element for which all the following are true:\n\n- the element is visible; and\n- the element is part of the sequential focus navigation order of the `iframe`'s document.\n\nAn element is <dfn id=\"akn7bn:contain\">contained</dfn> in a nested browsing context if its owner document is the container document of the nested browsing context."
assumptions: 'This rule assumes that interactive content inside `iframe` elements is used to provide functionality. If the interactive content does not provide functionality, for example a button that does nothing when clicked, success criterion 2.1.1 may be satisfied, even if the rule is failed.'
accessibility_support: 'There are no accessibility support issues known.'
background: "Setting the `tabindex` attribute of an `iframe` element to a negative value effectively excludes its content from the tab-order of the page. A `button` may be in the tab-order of an `iframe`, but if the `iframe` itself is taken from the tab-order, the `button` is effectively keyboard inaccessible.\n\nEach document, including documents inside an `iframe`, has its own sequential focus navigation order. These focus orders are combined to get the page's global tab-order (called the flattened tabindex-ordered focus navigation scope). For an `iframe` with a negative tabindex, its sequential focus navigation order is not included in the page's global tab-order (as a consequence for the rules to build the tabindex-ordered focus navigation scope).\n\n### Bibliography\n\n- [Understanding Success Criterion 2.1.1: Keyboard](https://www.w3.org/WAI/WCAG22/Understanding/keyboard)\n- [WCAG Technique G202: Ensuring keyboard control for all functionality](https://www.w3.org/WAI/WCAG22/Techniques/general/G202)"
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'This `iframe` element does not have a `tabindex` attribute value that is a negative number', html: '<iframe srcdoc="<a href=''/''>Home</a>"></iframe>' }, { name: 'Passed Example 2', description: 'This `iframe` element does not have a `tabindex` attribute value that is a negative number', html: '<iframe tabindex="0" srcdoc="<a href=''/''>Home</a>"></iframe>' }]
    failed: [{ name: 'Failed Example 1', description: 'This `iframe` element contains a visible link that is part of its sequential focus navigation order, and has a negative `tabindex`.', html: '<iframe tabindex="-1" srcdoc="<a href=''/''>Home</a>"></iframe>' }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: 'This `iframe` element contains no content that is part of its sequential focus navigation order.', html: '<iframe tabindex="-1" srcdoc="<h1>Hello world</h1>"></iframe>' }, { name: 'Inapplicable Example 2', description: 'This `iframe` element contains no visible content because the iframe is hidden.', html: '<iframe tabindex="-1" hidden srcdoc="<a href=''/''>Home</a>"></iframe>' }, { name: 'Inapplicable Example 3', description: 'This `iframe` element contains no visible content because of the small size of the iframe.', html: '<iframe tabindex="-1" width="1" height="1" srcdoc="<a href=''/''>Home</a>"></iframe>' }, { name: 'Inapplicable Example 4', description: 'This `iframe` element contains a link that is not part of its sequential focus navigation order because of its own `tabindex`.', html: '<iframe tabindex="-1" srcdoc="<a href=''/'' tabindex=''-1''>Home</a>"></iframe>' }, { name: 'Inapplicable Example 5', description: 'This `iframe` element is inert because of its own `inert` attribute value.', html: '<iframe tabindex="-1" inert srcdoc="<a href=''/''>Home</a>"></iframe>' }, { name: 'Inapplicable Example 6', description: 'Once the "Privacy policy details" button is activated, the `iframe` element becomes inert because of the showModal() method, which causes the `iframe` to be [blocked by a modal].', html: "<iframe id=\"myFrame\" title=\"Links\" srcdoc=\"<a href='/'>Home</a>\"></iframe>\n<div>\n\t<button id=\"ppButton\" onclick=\"openDialog()\">Privacy policy details</button>\n</div>\n<dialog id=\"ppDialog\" aria-labelledby=\"dialogLabel\">\n\t<h2 id=\"dialogLabel\">Privacy Policy</h2>\n\t<p>We store no data.</p>\n\t<button id=\"cancel\" onclick=\"ppDialog.close()\">Cancel</button>\n</dialog>\n<script>\n\tconst openDialog = () => {\n\t\tppDialog.showModal()\n\t\tmyFrame.tabIndex = '-1'\n\t}\n\tppDialog.addEventListener('close', () => (myFrame.tabIndex = 0))\n\twindow.addEventListener('DOMContentLoaded', openDialog)\n</script>" }]
expectation: 'The test target does not have a negative number as a `tabindex` attribute value.'
