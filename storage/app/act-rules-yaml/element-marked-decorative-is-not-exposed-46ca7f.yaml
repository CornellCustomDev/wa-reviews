id: 46ca7f
name: 'Element marked as decorative is not exposed'
metadata:
    id: 46ca7f
    name: 'Element marked as decorative is not exposed'
    rule_type: atomic
    description: "This rule checks that elements marked as decorative either are not included in the accessibility tree, or have a presentational role.\n"
    accessibility_requirements: null
    input_aspects: ['Accessibility tree', 'CSS styling', 'DOM tree']
    acknowledgments: { authors: ['Jean-Yves Moyen'], funding: [WAI-Tools] }
    htmlHintIgnore: [alt-require]
applicability: 'This rule applies to any element which is marked as decorative.'
assumptions: 'There are no assumptions.'
accessibility_support: 'Implementation of the Presentational Roles Conflict Resolution differs slightly from one user agent to the other. Hence, some elements might be exposed by one user agent and not by another, and consequently might create accessibility issues only for some users. Nevertheless, triggering the conflict is a bad practice.'
background: "Elements are normally marked as decorative to convey the intention of the author that they are pure decoration and thus shouldn't be exposed to assistive technologies. On the other hand, elements that are focusable are important to know for anybody and should be exposed to assistive technologies; and elements that are defining any global ARIA attribute indicate an intention to communicate something to the assistive technologies (through the `aria-*` attribute). When an element is both marked as decorative and either focusable or defining a global ARIA attribute, a conflict arises between these two intentions. The conflict is resolved by exposing the element.\n\nWhenever such a conflict occurs, this indicates at the very least mismatching intentions. Such a conflict should be avoided.\n\nWhen these conflicts arise on decorative non-text content, this is also a failure of Success Criterion 1.1.1: Non-text Content because decorative non-text content must be implemented in a way that allows assistive technologies to ignore it. When these conflicts arise on text content, or on content which is not decorative, this is not a failure of WCAG. Therefore this rule is not mapping to any specific WCAG Success Criterion, and is not an accessibility requirement for WCAG."
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'This `img` element is marked as decorative through its empty `alt` attribute and has semantic role of `none`.', html: '<img src="/test-assets/shared/w3c-logo.png" alt="" />' }, { name: 'Passed Example 2', description: 'This `img` element is marked as decorative through its empty `alt` attribute and is not included in the accessibility tree because of the `aria-hidden` attribute.', html: '<img src="/test-assets/shared/w3c-logo.png" alt="" aria-hidden="true" />' }, { name: 'Passed Example 3', description: 'This `img` element is marked as decorative through its empty `alt` attribute and is not included in the accessibility tree because it is `hidden` to everyone.', html: '<img src="/test-assets/shared/w3c-logo.png" alt="" hidden />' }, { name: 'Passed Example 4', description: 'This `nav` element is marked as decorative through its `role` attribute and has a semantic role of `presentation`.', html: "<nav role=\"presentation\">\n\t<a href=\"https://act-rules.github.io/\" aria-label=\"ACT rules\">ACT rules</a>\n</nav>" }, { name: 'Passed Example 5', description: 'This `img` element is marked as decorative through its `role` attribute and has a semantic role of `presentation` because own attributes are not required to be exposed and thus do not trigger the presentational roles conflict resolution.', html: '<img src="/test-assets/shared/w3c-logo.png" role="presentation" alt="W3C logo" />' }, { name: 'Passed Example 6', description: 'This `svg` element is marked as decorative through its `role` attribute and has a semantic role of `none`.', html: "<svg role=\"none\">\n\t<circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"yellow\"></circle>\n</svg>" }]
    failed: [{ name: 'Failed Example 1', description: 'This `nav` element is marked as decorative through its `role` attribute but has a non-empty `aria-label` attribute causing it to be included in the accessibility tree with its implicit role of `navigation`.', html: "<nav role=\"presentation\" aria-label=\"global\">\n\t<a href=\"https://act-rules.github.io/\" aria-label=\"ACT rules\">ACT rules</a>\n</nav>" }, { name: 'Failed Example 2', description: 'This `img` element is marked as decorative through its empty `alt` attribute but has a non-empty `aria-labelledby` attribute causing it to be included in the accessibility tree with its implicit role of `img`.', html: '<img src="/test-assets/shared/w3c-logo.png" alt="" aria-labelledby="label" /> <span hidden id="label">W3C logo</span>' }, { name: 'Failed Example 3', description: 'This `svg` element is marked as decorative through its `role` attribute but has a non-empty `aria-label` attribute causing it to be included in the accessibility tree with its implicit role of `graphics-document`.', html: "<svg role=\"none\" aria-label=\"Yellow circle\">\n\t<circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"yellow\"></circle>\n</svg>" }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: 'This `img` element is not marked as decorative.', html: '<img src="/test-assets/shared/w3c-logo.png" aria-label="W3C logo" />' }]
expectation: 'Each target element either is not included in the accessibility tree or has a semantic role of `none` or `presentation`.'
