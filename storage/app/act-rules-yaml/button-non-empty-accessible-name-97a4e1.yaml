machine_name: button-non-empty-accessible-name-97a4e1
id: 97a4e1
name: 'Button has non-empty accessible name'
metadata:
    id: 97a4e1
    name: 'Button has non-empty accessible name'
    rule_type: atomic
    description: "This rule checks that each `button` element has a non-empty accessible name.\n"
    accessibility_requirements: { 'wcag20:4.1.2': { forConformance: true, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' } }
    input_aspects: ['Accessibility Tree', 'DOM Tree', 'CSS Styling']
    acknowledgments: { authors: ['Stein Erik Skotkjerra', 'Wilco Fiers'], funding: [WAI-Tools] }
applicability: 'This rule applies to elements that are included in the accessibility tree and have a [semantic role](#semantic-role) of `button`, except for `input` elements with a `type` [attribute value] of `image`.'
assumptions: '- The rule assumes that all buttons are [user interface components as defined by WCAG 2](https://www.w3.org/TR/WCAG22/#dfn-user-interface-components).'
accessibility_support: "- Implementation of Presentational Roles Conflict Resolution varies from one browser or assistive technology to another. Depending on this, some elements can have a semantic role of `button` and fail this rule with some technology but users of other technologies would not experience any accessibility issue.\n\n- Some elements have a role of `button` and a default accessible name defined by the HTML Accessibility API Mapping, for example `input` elements whose `type` attribute value is either `submit` or `reset`. This rule considers that these default names can be descriptive and therefore does not fail them."
background: "This rule considers an exception for \"image buttons\" (i.e., `input` elements with a `type` [attribute value] of `image`). Image buttons failing this rule would fail [Success Criterion 4.1.2](https://www.w3.org/WAI/WCAG22/Understanding/name-role-value) and [Success Criterion 1.1.1](https://www.w3.org/WAI/WCAG22/Understanding/non-text-content) which is not part of the accessibility requirements for this rule.\n\n### Related rules\n\n- [Image button has non-empty accessible name](https://www.w3.org/WAI/standards-guidelines/act/rules/59796f/)\n\n### Bibliography\n\n- [HTML Accessibility API Mappings 1.0 (working draft), 5.2 `input type=\"button\"`, `input type=\"submit\"` and `input type=\"reset\"`](https://www.w3.org/TR/html-aam/#input-type-button-input-type-submit-and-input-type-reset)\n- [Understanding Success Criterion 4.1.2: Name, Role, Value](https://www.w3.org/WAI/WCAG22/Understanding/name-role-value)\n- [ARIA14: Using aria-label to provide an invisible label where a visible label cannot be used](https://www.w3.org/WAI/WCAG22/Techniques/aria/ARIA14)\n- [ARIA16: Using aria-labelledby to provide a name for user interface controls](https://www.w3.org/WAI/WCAG22/Techniques/aria/ARIA16)"
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'This `button` element has an accessible name because of its text content.', html: '<button>My button</button>' }, { name: 'Passed Example 2', description: 'This `input` element has an accessible name because of its `value` attribute.', html: '<input type="submit" value="Submit" />' }, { name: 'Passed Example 3', description: 'This `button` element has an accessible name because of its `aria-label` attribute.', html: '<button aria-label="My button"></button>' }, { name: 'Passed Example 4', description: 'This element with a `button` role has an accessible name because of its `aria-label` attribute.', html: '<span role="button" aria-label="My button"></span>' }, { name: 'Passed Example 5', description: 'This `button` element with the `disabled` attribute has an accessible name because of its text content.', html: '<button disabled>Delete</button>' }, { name: 'Passed Example 6', description: 'This off screen `button` element has an accessible name because of its text content.', html: "<html>\n\t<style>\n\t\t.notInPage {\n\t\t\tposition: absolute;\n\t\t\tleft: -9999px;\n\t\t\ttop: -9999px;\n\t\t}\n\t</style>\n\t<body>\n\t\t<button class=\"notInPage\">Save</button>\n\t</body>\n</html>" }, { name: 'Passed Example 7', description: 'This `input` element has an accessible name because of the default accessible name for an `input` element with a `type` attribute set to `reset`.', html: '<input type="reset" />' }]
    failed: [{ name: 'Failed Example 1', description: 'This `button` element has no accessible name because it has no content or attribute that can provide it.', html: '<button></button>' }, { name: 'Failed Example 2', description: "This `button` element has no accessible name. The `value` attribute does not provide an accessible name for `button` elements, only when an `input` element's [state of the `type` attribute](https://html.spec.whatwg.org/multipage/input.html#states-of-the-type-attribute) is `button`, `submit` or `reset`.", html: '<button type="button" value="read more"></button>' }, { name: 'Failed Example 3', description: 'This element with the `button` role has no accessible name because it has no content or attribute that can provide it.', html: '<span role="button"></span>' }, { name: 'Failed Example 4', description: 'This off screen `button` element has no accessible name because it has no content or attribute that can provide it.', html: "<html>\n\t<style>\n\t\t.notInPage {\n\t\t\tposition: absolute;\n\t\t\tleft: -9999px;\n\t\t\ttop: -9999px;\n\t\t}\n\t</style>\n\t<body>\n\t\t<button class=\"notInPage\" value=\"delete\"></button>\n\t</body>\n</html>" }, { name: 'Failed Example 5', description: 'This `button` element has an explicit role of `none`. However, it is focusable (by default). Thus it has a semantic role of `button` due to Presentational Roles Conflict Resolution. It has an empty accessible name.', html: '<button role="none"></button>' }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: 'This `input` element has a `type` attribute set to `image`. These images are tested in a separate rule which also tests [success criterion 1.1.1 Non-text Content](https://www.w3.org/TR/WCAG22/#non-text-content).', html: '<input type="image" value="download" alt="Download" />' }, { name: 'Inapplicable Example 2', description: 'This `button` element does not need an accessible name because it is not included in the accessibility tree.', html: '<button style="display: none;"></button>' }, { name: 'Inapplicable Example 3', description: 'This `button` element has a `link` role. Links are tested in a separate rule which also tests [success criterion 2.4.4 Link Purpose (In Context)](https://www.w3.org/TR/WCAG22/#link-purpose-in-context).', html: '<button role="link">take me somewhere</button>' }, { name: 'Inapplicable Example 4', description: 'There is no element with a semantic role of `button`.', html: '<div>Press Here</div>' }, { name: 'Inapplicable Example 5', description: 'This `button` element has an explicit role of `none`; it is not focusable because it is `disabled`. Thus it has a semantic role of `none`.', html: '<button role="none" disabled></button>' }]
expectation: 'Each target element has an accessible name that is not empty (`""`).'
