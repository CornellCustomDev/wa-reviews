id: 80af7b
name: 'Focusable element has no keyboard trap'
metadata:
    id: 80af7b
    name: 'Focusable element has no keyboard trap'
    rule_type: composite
    description: "This rule checks for keyboard traps. This includes use of both standard and non-standard keyboard navigation to navigate through all content without becoming trapped.\n"
    accessibility_requirements: { 'wcag20:2.1.2': { forConformance: true, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' }, 'wcag-text:cc5': { title: 'WCAG Non-Interference', forConformance: true, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' }, 'wcag-technique:G21': { forConformance: false, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' } }
    input_rules: [a1b64e, ebe86a]
    acknowledgments: { authors: ['Anne Thyme Nørregaard', 'Dagfinn Rømen', 'Geir Sindre Fossøy'], funding: [WAI-Tools] }
applicability: 'This rule applies to any HTML or SVG element that is focusable.'
assumptions: 'There are no assumptions.'
accessibility_support: 'There are no accessibility support issues known.'
background: "This rule only requires navigation in one direction (either forward or backward), not both, and not a specific one. It is clear that not being able to escape a focus trap in any direction is a failure of Success Criterion 2.1.2 No keyboard trap. However, it is less clear that being able to escape in only one direction is enough to satisfy it. If Success Criterion 2.1.2 No keyboard trap requires the possibility to escape the trap in a specific way (e.g. forward [standard keyboard navigation](#standard-keyboard-navigation)) or in both directions, this rule may pass while the criterion is not satisfied.\n\n### Bibliography\n\n- [Understanding Success Criterion 2.1.2: No Keyboard Trap](https://www.w3.org/WAI/WCAG22/Understanding/no-keyboard-trap.html)\n- [G21: Ensuring that users are not trapped in content](https://www.w3.org/WAI/WCAG22/Techniques/general/G21)\n- [F10: Failure of Success Criterion 2.1.2 and Conformance Requirement 5 due to combining multiple content formats in a way that traps users inside one format type](https://www.w3.org/WAI/WCAG22/Techniques/failures/F10)"
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'These focusable elements do not create a trap for keyboard navigation.', html: '<a href="#">Link 1</a> <button>Button1</button>' }, { name: 'Passed Example 2', description: 'This element is made focusable by the `tabindex` attribute. It does not create a trap for keyboard navigation.', html: '<div tabindex="1">Text</div>' }, { name: 'Passed Example 3', description: 'This element is made focusable by the `tabindex` attribute, even if it is not part of the sequential focus navigation. It does not create a trap for keyboard navigation.', html: '<div tabindex="-1">Text</div>' }, { name: 'Passed Example 4', description: 'These focusable `button` elements have scripts that create a keyboard trap. The document includes help information in a paragraph before the `button` elements and the method advised works to escape the keyboard trap.', html: "<script src=\"/test-assets/focusable-no-keyboard-trap/keyboard.js\"></script>\n\n<p>Press Ctrl+M to Exit</p>\n<a id=\"link1\" href=\"#\">Link 1</a>\n<button id=\"btn1\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn2')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 1\n</button>\n<button id=\"btn2\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn1')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 2\n</button>\n<a id=\"link2\" href=\"#\">Link 2</a>" }, { name: 'Passed Example 5', description: 'These focusable `button` elements have scripts that create a keyboard trap. The document includes help information within the trap and the method advised works to escape the keyboard trap.', html: "<script src=\"/test-assets/focusable-no-keyboard-trap/keyboard.js\"></script>\n\n<a id=\"link1\" href=\"#\">Link 1</a>\n<button id=\"btn1\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn2')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 1\n</button>\n<p>Press Ctrl+M to Exit</p>\n<button id=\"btn2\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn1')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 2\n</button>\n<a id=\"link2\" href=\"#\">Link 2</a>" }, { name: 'Passed Example 6', description: 'These focusable `button` elements have scripts that create a keyboard trap. The document includes help information in a "help" link that once clicked exposes the instructions to escape the keyboard trap.', html: "<script src=\"/test-assets/focusable-no-keyboard-trap/keyboard.js\"></script>\n\n<div onkeydown=\"escapeTrapOnCtrlM(event)\">\n\t<a id=\"link1\" href=\"#\">Link 1</a>\n\t<button id=\"btn1\" onfocus=\"trapOn = true\" onblur=\"moveFocusTo('helpLink')\">\n\t\tButton 1\n\t</button>\n\t<a id=\"helpLink\" href=\"#\" onclick=\"showHelpText()\">How to go the next element</a>\n\t<div id=\"helptext\"></div>\n\t<button id=\"btn2\" onblur=\"moveFocusTo('btn1')\">\n\t\tButton 2\n\t</button>\n</div>\n<a id=\"link2\" href=\"#\">Link 2</a>" }]
    failed: [{ name: 'Failed Example 1', description: 'This focusable element creates a keyboard trap bringing focus to the `button`. Note that if one of the links is removed, the focus may jump to the browser UI before the timeout expires, at which point the `this.focus()` trap cannot trigger anymore.', html: "<a href=\"#\">Link 1</a>\n<button onblur=\"setTimeout(() => this.focus(), 10)\">\n\tButton1\n</button>\n<a href=\"#\">Link 2</a>" }, { name: 'Failed Example 2', description: 'These focusable `button` elements create a keyboard trap preventing the last `button` to be reached using the keyboard.', html: "<button onblur=\"setTimeout(() => this.nextElementSibling.focus(), 10)\">\n\tButton1\n</button>\n<button onblur=\"setTimeout(() => this.previousElementSibling.focus(), 10)\">\n\tButton2\n</button>\n<button>\n\tButton3\n</button>" }, { name: 'Failed Example 3', description: 'This `button` element is between other `button` elements creating a keyboard trap.', html: "<button onblur=\"setTimeout(() => this.focus(), 10)\">Button 1</button>\n<button>Button 2</button>\n<button onblur=\"setTimeout(() => this.focus(), 10)\">Button 3</button>" }, { name: 'Failed Example 4', description: 'These focusable `button` elements create a keyboard trap with no instructions.', html: "<script src=\"/test-assets/focusable-no-keyboard-trap/keyboard.js\"></script>\n\n<a id=\"link1\" href=\"#\">Link 1</a>\n<button id=\"btn1\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn2')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 1\n</button>\n<button id=\"btn2\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn1')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 2\n</button>\n<a id=\"link2\" href=\"#\">Link 2</a>" }, { name: 'Failed Example 5', description: "These focusable `button` elements create a keyboard trap with instructions that don't give advice on the method for proceeding.", html: "<script src=\"/test-assets/focusable-no-keyboard-trap/keyboard.js\"></script>\n\n<p>Go to the next element</p>\n<a id=\"link1\" href=\"#\">Link 1</a>\n<button id=\"btn1\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn2')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 1\n</button>\n<button id=\"btn2\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn1')\" onkeydown=\"escapeTrapOnCtrlM(event)\">\n\tButton 2\n</button>\n<a id=\"link2\" href=\"#\">Link 2</a>" }, { name: 'Failed Example 6', description: "These focusable `button` elements create a keyboard trap with help text, where the method advised doesn't work.", html: "<script src=\"/test-assets/focusable-no-keyboard-trap/keyboard.js\"></script>\n\n<a id=\"link1\" href=\"#\">Link 1</a>\n<button id=\"btn1\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn2')\">\n\tButton 1\n</button>\n<p>Press Ctrl+M to Exit</p>\n<button id=\"btn2\" onfocus=\"trapOn = true\" onblur=\"moveFocusToButton('btn1')\">\n\tButton 2\n</button>\n<a id=\"link2\" href=\"#\">Link 2</a>" }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: 'There is no focusable element.', html: '<h1>Page 1</h1>' }, { name: 'Inapplicable Example 2', description: 'There is no focusable element.', html: '<button type="button" disabled>Click Me!</button>' }, { name: 'Inapplicable Example 3', description: 'There is no focusable element.', html: '<button type="button" style="display:none;">Click Me!</button>' }, { name: 'Inapplicable Example 4', description: 'There is no focusable element.', html: '<a href="#" style="visibility:hidden;">Link 1</a> <button style="visibility:hidden;">Button1</button>' }]
expectation: "For each test target, the [outcome](#outcome) of at least one of the following rules is \"passed\":\n\n- [Focusable Element Has No Keyboard Trap Via Standard Navigation](https://www.w3.org/WAI/standards-guidelines/act/rules/a1b64e/)\n- [Focusable Element Has No Keyboard Trap Via Non-Standard Navigation](https://www.w3.org/WAI/standards-guidelines/act/rules/ebe86a/)"
