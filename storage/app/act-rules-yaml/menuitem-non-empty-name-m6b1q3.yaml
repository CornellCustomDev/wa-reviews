machine_name: menuitem-non-empty-name-m6b1q3
id: m6b1q3
name: 'Menuitem has non-empty accessible name'
metadata:
    id: m6b1q3
    name: 'Menuitem has non-empty accessible name'
    rule_type: atomic
    description: "This rule checks that each element with a `menuitem` role has a non-empty accessible name.\n"
    accessibility_requirements: { 'wcag20:4.1.2': { forConformance: true, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' } }
    input_aspects: ['Accessibility Tree', 'CSS Styling', 'DOM Tree']
    acknowledgments: { authors: ['Wilco Fiers'], funding: [WAI-Tools], assets: ['The "file.svg" icon is part of the Feather Icons package, which uses the [MIT license](https://github.com/feathericons/feather/blob/master/LICENSE).'] }
applicability: 'This rule applies to HTML elements that is a semantic `menuitem` included in the accessibility tree.'
assumptions: 'This rule assumes that all menuitems are [user interface components as defined by WCAG 2](https://www.w3.org/TR/WCAG22/#dfn-user-interface-components). If an element has a role of `menuitem` that would not be perceived as a single control by users, [4.1.2 Name, Role, Value](https://www.w3.org/TR/WCAG22/#name-role-value) would not apply and so failing this rule would not result in a conformance issue.'
accessibility_support: 'Implementation of Presentational Roles Conflict Resolution varies from one browser or assistive technology to another. Depending on this, some semantic `menuitem` elements can fail this rule with some technology but users of other technologies would not experience any accessibility issue.'
background: "### Bibliography\n\n- [Understanding Success Criterion 4.1.2: Name, Role, Value](https://www.w3.org/WAI/WCAG22/Understanding/name-role-value)\n- [ARIA14: Using aria-label to provide an invisible label where a visible label cannot be used](https://www.w3.org/WAI/WCAG22/Techniques/aria/ARIA14)\n- [ARIA16: Using aria-labelledby to provide a name for user interface controls](https://www.w3.org/WAI/WCAG22/Techniques/aria/ARIA16)"
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'This element with the `menuitem` role has an accessible name because of its text content.', html: "<div role=\"menu\">\n\t<button role=\"menuitem\">New file</button>\n</div>" }, { name: 'Passed Example 2', description: 'This element with the `menuitem` role has an accessible name because of its `aria-label` attribute.', html: "<div role=\"menu\">\n\t<button role=\"menuitem\" aria-label=\"New file\">\n\t\t<img src=\"/test-assets/shared/file.svg\" alt=\"\" />\n\t</button>\n</div>" }, { name: 'Passed Example 3', description: 'This element with the `menuitem` role has an accessible name because its `aria-labelledby` attribute references an element with text content.', html: "<div role=\"menu\">\n\t<button role=\"menuitem\" aria-labelledby=\"newfile\">\n\t\t<img src=\"/test-assets/shared/file.svg\" alt=\"\" />\n\t\t<span id=\"newfile\" hidden>New file</span>\n\t</button>\n</div>" }, { name: 'Passed Example 4', description: 'This element with the `menuitem` role has an accessible name because of its `title` attribute.', html: "<div role=\"menu\">\n\t<button role=\"menuitem\" title=\"New file\">\n\t\t<img src=\"/test-assets/shared/file.svg\" alt=\"\" />\n\t</button>\n</div>" }]
    failed: [{ name: 'Failed Example 1', description: 'This element with the `menuitem` role has no accessible name because it has no content or attribute that can provide it.', html: "<div role=\"menu\">\n\t<button role=\"menuitem\">\n\t\t<img src=\"/test-assets/shared/file.svg\" alt=\"\" />\n\t</button>\n</div>" }, { name: 'Failed Example 2', description: 'This off-screen element with the `menuitem` role has no accessible name because it has no content or attribute that can provide it.', html: "<html lang=\"en\">\n\t<style>\n\t\t.offscreen {\n\t\t\tposition: absolute;\n\t\t\tleft: -9999px;\n\t\t\ttop: -9999px;\n\t\t}\n\t</style>\n\t<div role=\"menu\" class=\"offscreen\">\n\t\t<button role=\"menuitem\">\n\t\t\t<img src=\"/test-assets/shared/file.svg\" alt=\"\" />\n\t\t</button>\n\t</div>\n</html>" }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: 'The `li` element has a `listitem` semantic role, even as a child of a `menu` element.', html: "<menu>\n\t<li>\n\t\t<a href=\"#\">New file</a>\n\t</li>\n</menu>" }, { name: 'Inapplicable Example 2', description: 'This element with the `menuitem` role does not need an accessible name because it is not included in the accessibility tree.', html: "<div role=\"menu\" hidden>\n\t<button role=\"menuitem\">\n\t\t<img src=\"/test-assets/shared/file.svg\" alt=\"\" />\n\t</button>\n</div>" }]
expectation: 'Each target element has an accessible name that is not empty (`""`).'
