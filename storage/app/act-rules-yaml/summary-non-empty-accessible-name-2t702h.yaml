id: 2t702h
name: 'Summary element has non-empty accessible name'
metadata:
    id: 2t702h
    name: 'Summary element has non-empty accessible name'
    rule_type: atomic
    description: "This rule checks that each `summary` element has a non-empty accessible name.\n"
    accessibility_requirements: { 'wcag20:4.1.2': { forConformance: true, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' } }
    input_aspects: ['Accessibility Tree', 'DOM Tree', 'CSS Styling']
    acknowledgments: { authors: ['Wilco Fiers'] }
applicability: "This rule applies to HTML `summary` elements for which all the following are true:\n\n- the element is included in the accessibility tree; and\n- the element works as the summary button for its parent `details` element; and\n- the element has no explicit role, or the explicit role is ignored due to a presentational role conflict."
assumptions: 'The rule assumes that all `summary` elements are [user interface components as defined by WCAG 2](https://www.w3.org/TR/WCAG22/#dfn-user-interface-components).'
accessibility_support: "There is a difference in how user agents expose the triangle indicating the control's expand state. As a result, some user agents include the triangle in the accessible name of the summary element."
background: "This rule is only applicable to `summary` elements that the browser will use as controls for a `details` element. While this rule is not applicable to `summary` elements with an explicit semantic role, most of the time these likely do still require an accessible name. This is covered by other rules, such as the Button has non-empty accessible name.\n\nIf the `summary` element is not included in the accessibility tree, but is still included in sequential focus navigation, this can result in accessibility issues not tested by this rule. This is covered under Element with aria-hidden has no content in sequential focus navigation.\n\nNote that some user agents expose the `summary` element with a `button` role. This deviates from the implicit ARIA semantics described in [ARIA in HTML](https://www.w3.org/TR/html-aria/#el-summary). Because some browsers do not give `summary` elements a button role, these elements need to be tested separately from the [Button has non-empty accessible name](https://www.w3.org/WAI/standards-guidelines/act/rules/97a4e1/) ACT rule.\n\n### Bibliography\n\n- [Understanding Success Criterion 4.1.2: Name, Role, Value](https://www.w3.org/WAI/WCAG22/Understanding/name-role-value)\n- [ARIA14: Using aria-label to provide an invisible label where a visible label cannot be used](https://www.w3.org/WAI/WCAG22/Techniques/aria/ARIA14)\n- [ARIA16: Using aria-labelledby to provide a name for user interface controls](https://www.w3.org/WAI/WCAG22/Techniques/aria/ARIA16)\n- [Summary element entry for ARIA in HTML](https://www.w3.org/TR/html-aria/#el-summary)"
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'This `summary` element has an accessible name because of its text content.', html: "<details>\n\t<summary>Opening times</summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }, { name: 'Passed Example 2', description: 'This `summary` element has an accessible name because of its `aria-label` attribute.', html: "<details>\n\t<summary aria-label=\"Opening times\"></summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }, { name: 'Passed Example 3', description: 'This `summary` element has an accessible name because of its `aria-labelledby` attribute.', html: "<span id=\"opening-times\">Opening times</span>\n<details>\n\t<summary aria-labelledby=\"opening-times\"></summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }, { name: 'Passed Example 4', description: 'This `summary` element has an accessible name because of its text content. It does not need to be the first child element of `details`.', html: "<details>\n\t<p>This is a website. We are available 24/7.</p>\n\t<summary>Opening times</summary>\n</details>" }, { name: 'Passed Example 5', description: 'This first `summary` element has an accessible name because of its text content. The second `summary` element is inapplicable because only the first `summary` element will be used as a control for the `details` element.', html: "<details>\n\t<summary>Opening times</summary>\n\t<summary></summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }]
    failed: [{ name: 'Failed Example 1', description: 'This `summary` element has no accessible name, or an accessible name with just the `::marker` pseudo element, because it has no content or attribute that can provide it.', html: "<details>\n\t<summary></summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }, { name: 'Failed Example 2', description: 'This `summary` element has an explicit role of `none`. However, it is focusable (by default) which causes Presentational Roles Conflict Resolution. It fails because it has an empty accessible name.', html: "<details>\n\t<summary role=\"none\"></summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }, { name: 'Failed Example 3', description: 'This first `summary` element has no accessible name because it is empty. The second `summary` element is inapplicable because only the first `summary` element will be used as a control for the `details` element.', html: "<details>\n\t<summary></summary>\n\t<summary>Opening times</summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: 'This `summary` element is not a child of a `details` element and so will not be interactive.', html: '<summary></summary>' }, { name: 'Inapplicable Example 2', description: 'This `summary` element is not a direct child of a `details` element and so will not be interactive.', html: "<details>\n\t<div>\n\t\t<summary></summary>\n\t</div>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }, { name: 'Inapplicable Example 3', description: 'This `summary` element has an explicit semantic role of `button`. These are tested under Button has non-empty accessible name instead. Note that while this example does not fail WCAG, under ARIA in HTML](https://www.w3.org/TR/html-aria/#dfn-no-role) it is not allowed to override the role of a [summary for its parent details.', html: "<details>\n\t<summary role=\"button\">Opening hours</summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }, { name: 'Inapplicable Example 4', description: 'This `summary` element is hidden to everyone.', html: "<details style=\"display:none\">\n\t<summary></summary>\n\t<p>This is a website. We are available 24/7.</p>\n</details>" }]
expectation: 'Each target element has an accessible name that is not empty (`""`), nor just the name of the `::marker` pseudo element.'
