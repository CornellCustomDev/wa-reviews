machine_name: important-letter-spacing-wide-enough-24afc2
id: 24afc2
name: 'Important letter spacing in style attributes is wide enough'
metadata:
    id: 24afc2
    name: 'Important letter spacing in style attributes is wide enough'
    rule_type: atomic
    description: "This rule checks that the `style` attribute is not used to prevent adjusting `letter-spacing` by using `!important`, except if it's at least 0.12 times the font size.\n"
    accessibility_requirements: { 'wcag21:1.4.12': { forConformance: true, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' } }
    input_aspects: ['DOM Tree', 'CSS Styling']
    acknowledgments: { authors: ['Jean-Yves Moyen'], previous_authors: ['Jey Nandakumar'], funding: [WAI-Tools] }
applicability: "This rule applies to any HTML element with one or more visible text node children, when all the following are true for the `letter-spacing` property of the element:\n\n- the specified value is declared in a `style` attribute; and\n- the computed value is important."
assumptions: "- There is no mechanism available on the page to adjust `letter-spacing`. If there is such a mechanism, it is possible to fail this rule while Success Criterion 1.4.12 Text Spacing is still satisfied.\n\n- The font size is constant for all text in the element. If `font-size` changes (e.g., through use of the `::first-line` pseudo-element) then the required letter spacing would also change throughout the element. This is untested by the current rule.\n\n- This rule assumes that WCAG's meaning for the \"Letter spacing style property\" is the value of the CSS `letter-spacing` property rather than the actual space between letters. The value of the CSS property is _added_ to whichever spacing already exist (for example, due to kerning). Thus, the actual space between letters can be larger than the value of the `letter-spacing` property. If Success Criterion 1.4.12 Text Spacing is concerned by the actual space between letters, then this rule may fail (with the `letter-spacing` property being too small) while the Success Criterion is still satisfied (with the actual space being enough).\n\n- This rule assumes that when inter-letters space is changed because of justification, the `letter-spacing` property is not changed. Therefore, whether a text is justified or not doesn't change the result of this rule. Note that justifying text is a failure of Success Criterion 1.4.8 Visual Presentation.\n\n- The target text node expresses something in a human language written in a script that uses the `letter-spacing` property."
accessibility_support: 'While some assistive technologies are able to set user origin or user agent origin styles, others, such as browser extensions, are only able to set styles with the author origin. Such assistive technologies cannot create styles "winning" the cascade sort over a `style` attribute with an important declaration.'
background: "Styles declared in a `style` attribute have higher cascade specificity than any selector; therefore, they \"win\" the cascade sort] over any other style from [author origin, i.e. it cannot be overridden by any of these. On the other hand, if such a style is declared in a style sheet, it can still \"lose\" the cascade sort to declarations with higher specificity or simply coming from a later style sheet (such as ones injected by assistive technologies). This rule ensures that the element is not in the first case and that the style can be overridden by users, unless it is already at least the minimum required threshold. Important styles that are declared with the user or user agent can win the cascade sort over styles with the author origin.\n\nCSS specifications define each declaration as being either important (if it has the `!important` annotation) or normal. Given that `normal` is also a keyword for some properties, and that `!important` is wider known than this distinction, this rule rather uses \"important\"/\"not important\" to avoid confusion.\n\n### Bibliography\n\n- [Understanding Success Criterion 1.4.12: Text Spacing](https://www.w3.org/WAI/WCAG22/Understanding/text-spacing.html)\n- [CSS Text Module Level 3 - Spacing](https://www.w3.org/TR/css-text-3/#spacing)\n- [CSS Visual formatting model details](https://drafts.csswg.org/css2/visudet.html)\n\n### About test cases\n\nTest cases descriptions abusively refer to the CSS properties of text nodes, meaning the one of their parent."
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'This `p` element has a computed `letter-spacing` of 0.15 time the `font-size`.', html: "<p style=\"letter-spacing: 0.15em !important\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Passed Example 2', description: 'This `p` element has a computed `letter-spacing` of `3px`, which is exactly 0.12 the `font-size` of `25px`.', html: "<style>\n\tp {\n\t\tfont-size: 25px;\n\t}\n</style>\n\n<p style=\"letter-spacing: 3px !important\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Passed Example 3', description: 'This `p` element has two declared values for its `letter-spacing` property. The latest wins the cascade sort. It has a value of `0.15em`, which is wide enough.', html: "<p style=\"letter-spacing: 0.1em !important; letter-spacing: 0.15em !important\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Passed Example 4', description: 'This `p` element has two declared values for its `letter-spacing` property. The one which is important wins the cascade sort. It has a value of `0.15em`, which is wide enough.', html: "<p style=\"letter-spacing: 0.15em !important; letter-spacing: 0.1em\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Passed Example 5', description: 'This `p` element has a computed `letter-spacing` of `2px`, 0.2 times its computed `font-size` of `10px`; the `div` element has no visible text node children.', html: "<div style=\"font-size: 16px; letter-spacing: 2px !important\">\n\t<p style=\"font-size: 10px;\">\n\t\tThe toy brought back fond memories of being lost in the rain forest.\n\t</p>\n</div>" }, { name: 'Passed Example 6', description: 'This `p` element has a computed `letter-spacing` of 0.2 times its `font-size`; the `div` element has no visible text node children.', html: "<div style=\"letter-spacing: 0.1em !important\">\n\t<p style=\"letter-spacing: 0.2em !important;\">\n\t\tThe toy brought back fond memories of being lost in the rain forest.\n\t</p>\n</div>" }]
    failed: [{ name: 'Failed Example 1', description: 'This `p` element has a computed `letter-spacing` of only 0.1 times the font size, which is below the required minimum.', html: "<p style=\"letter-spacing: 0.1em !important\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Failed Example 2', description: 'This `p` element has a computed `letter-spacing` of `2px` which is only 0.1 times the font size (`20px`), thus below the required minimum.', html: "<style>\n\tp {\n\t\tfont-size: 20px;\n\t}\n</style>\n\n<p style=\"letter-spacing: 2px !important\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Failed Example 3', description: 'This `p` element has a computed `letter-spacing` of 0.', html: "<p style=\"letter-spacing: normal !important\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Failed Example 4', description: 'This `p` element has a computed `letter-spacing` of 0.', html: "<p style=\"letter-spacing: initial !important\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: "There is no HTML element.\n\n```svg\n<svg xmlns=\"http://www.w3.org/2000/svg\">\n    <text y=\"20\" style=\"letter-spacing: 0.1em\">ACT rules</text>\n</svg>\n```\n\n#### Inapplicable Example 2\n\nThere is no text node.", html: '<div style="letter-spacing: 0.1em !important;"></div>' }, { name: 'Inapplicable Example 3', description: 'There is no visible text node because of `display: none`.', html: "<p style=\"display: none; letter-spacing: 0.1em !important;\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Inapplicable Example 4', description: 'There is no visible text node because it is positioned off-screen.', html: "<p style=\"position: absolute; top: -999em; letter-spacing: 0.1em !important;\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Inapplicable Example 5', description: "This `p` element's `letter-spacing` property is not declared in a `style` attribute.", html: "<p style=\"width: 60%\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Inapplicable Example 6', description: 'The specified value of the `letter-spacing` property of this `p` element is declared in the style sheet, not in the `style` attribute (it wins the cascade sort because it is important).', html: "<style>\n\tp {\n\t\tletter-spacing: 0.1em !important;\n\t}\n</style>\n\n<p style=\"letter-spacing: 0.15em\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Inapplicable Example 7', description: 'This `p` element does not have an important computed `letter-spacing`.', html: "<p style=\"letter-spacing: 0.1em\">\n\tThe toy brought back fond memories of being lost in the rain forest.\n</p>" }, { name: 'Inapplicable Example 8', description: 'The computed value of the `letter-spacing` property of this `span` element is the inherited value, that is the computed value of the `p` element and therefore not important; the `p` element has no visible text node children.', html: "<p style=\"letter-spacing: 0.1em\">\n\t<span style=\"letter-spacing: inherit !important;\">\n\t\tThe toy brought back fond memories of being lost in the rain forest.\n\t</span>\n</p>" }, { name: 'Inapplicable Example 9', description: 'The computed value of the `letter-spacing` property of this `span` element is the inherited value, that is the computed value of the `p` element and therefore not important; the `p` element has no visible text node children.', html: "<p style=\"letter-spacing: 0.1em\">\n\t<span style=\"letter-spacing: unset !important;\">\n\t\tThe toy brought back fond memories of being lost in the rain forest.\n\t</span>\n</p>" }]
expectation: 'For each test target, the computed value of its `letter-spacing` property is at least 0.12 times the computed value of its `font-size` property.'
