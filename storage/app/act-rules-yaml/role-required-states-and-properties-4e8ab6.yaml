machine_name: role-required-states-and-properties-4e8ab6
id: 4e8ab6
name: 'Element with role attribute has required states and properties'
metadata:
    id: 4e8ab6
    name: 'Element with role attribute has required states and properties'
    rule_type: atomic
    description: "This rule checks that elements that have an explicit role also specify all required states and properties.\n"
    accessibility_requirements: { 'wcag-technique:ARIA5': { forConformance: false, failed: 'not satisfied', passed: 'further testing needed', inapplicable: 'further testing needed' }, 'aria12:requiredState': { forConformance: true, failed: 'not satisfied', passed: satisfied, inapplicable: satisfied }, 'wcag20:1.3.1': { secondary: 'This success criterion is **less strict** than this rule. This is because browsers and assistive technologies will often fall back on a non-standard default value, which may be sufficient. Some of the failed examples may satisfy this success criterion.' }, 'wcag20:4.1.2': { secondary: 'This success criterion is **less strict** than this rule. This is because browsers and assistive technologies will often fall back on a non-standard default value, which may be sufficient. Some of the failed examples may satisfy this success criterion.' } }
    input_aspects: ['DOM Tree']
    acknowledgments: { authors: ['Anne Thyme NÃ¸rregaard', 'Tom Brunet'], funding: [WAI-Tools] }
applicability: 'This rule applies to any HTML or SVG element that is included in the accessibility tree and has an explicit semantic role, except if the element has an implicit semantic role that is identical to the explicit semantic role.'
assumptions: '- The ARIA `role` is being used to conform to WCAG.'
accessibility_support: "This rule relies on browsers and assistive technologies to support leaving out WAI-ARIA required states and properties when a WAI-ARIA implicit value for role is specified in WAI-ARIA Specifications.\n\n**Note:** The required states and properties with implicit values can be found in the Core Accessibility API Mappings 1.1 [Overview of default values for missing required attributes](https://www.w3.org/TR/core-aam-1.1/#authorErrorDefaultValuesTable)."
background: "Omitting WAI-ARIA required states and properties is often the result of a developer error. When required properties are missing and a default value is not specified by WAI-ARIA Specifications, the behavior is not defined. For WAI-ARIA 1.2, the only explicit semantic roles with a required property with a default value are the `option` and `tabs roles` for the `aria-selected` property.\n\nThis rule is testing author built components that specify explicit semantic roles and not components that keep their implicit semantic role. For components that keep their implicit semantic role, all native HTML and SVG elements have native attributes that are mapped to all of the WAI-ARIA required states and properties](https://www.w3.org/TR/wai-aria/#requiredState). Most of these mappings are defined in the [HTML Accessibility API Mappings, Attribute State and Property Mappings.\n\n### Bibliography\n\n- [ARIA5: Using WAI-ARIA state and property attributes to expose the state of a user interface component](https://www.w3.org/WAI/WCAG22/Techniques/aria/ARIA5)\n- [WAI-ARIA required states and properties](https://www.w3.org/TR/wai-aria-1.2/#requiredState)\n- [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt)"
test_cases:
    passed: [{ name: 'Passed Example 1', description: 'This `heading` has the required `aria-level` property.', html: "<div role=\"heading\" aria-level=\"1\">\n\tMy First Heading\n</div>" }, { name: 'Passed Example 2', description: 'This `checkbox` has the required `aria-checked` property.', html: "<div role=\"checkbox\" aria-checked=\"false\" aria-labelledby=\"label\"></div>\n<div id=\"label\">Check me</div>" }, { name: 'Passed Example 3', description: 'This `scrollbar` has the required properties `aria-controls` and `aria-valuenow`. `aria-valuemin` has a default value of 0 and `aria-valuemax` of 100.', html: "<div role=\"scrollbar\" aria-controls=\"content\" aria-valuenow=\"0\"></div>\n<main id=\"content\"></main>" }, { name: 'Passed Example 4', description: 'These `option` nodes do not need the required `aria-selected` property because it has a default value of `false`.', html: "<div id=\"label\">Tags</div>\n<ul role=\"listbox\" aria-labelledby=\"label\">\n\t<li role=\"option\">Zebra</li>\n\t<li role=\"option\">Zoom</li>\n</ul>" }, { name: 'Passed Example 5', description: 'This `separator` is not a `widget` because it is not focusable. The `separator` role only requires the `aria-valuenow` property when the element is focusable.', html: "<p>My first HTML</p>\n<div role=\"separator\"></div>\n<p>My last HTML</p>" }, { name: 'Passed Example 6', description: 'This `combobox` has the required properties `aria-controls` and `aria-expanded`.', html: "<label for=\"tag_combo\">Tag</label>\n<input type=\"text\" id=\"tag_combo\" role=\"combobox\" aria-expanded=\"true\" aria-controls=\"popup_listbox\" />\n<ul role=\"listbox\" id=\"popup_listbox\">\n\t<li role=\"option\">Zebra</li>\n\t<li role=\"option\" id=\"selected_option\">Zoom</li>\n</ul>" }]
    failed: [{ name: 'Failed Example 1', description: 'This `heading` does not have the required `aria-level` property. Prior to WAI-ARIA 1.2 the `heading` role had an implicit default `aria-level` value of `2`. As of WAI-ARIA 1.2 this property must be explicitly set.', html: "<div role=\"heading\">\n\tMy First Heading\n</div>" }, { name: 'Failed Example 2', description: 'This `switch` does not have the required `aria-checked` property. Prior to WAI-ARIA 1.2 the `switch` role had an implicit default `aria-checked` value of `false`. As of WAI-ARIA 1.2 this property must be explicitly set.', html: "<div role=\"switch\">\n\tToggle me\n</div>" }, { name: 'Failed Example 3', description: 'This `checkbox` does not have the required property `aria-checked`. Prior to WAI-ARIA 1.2 the `checkbox` had an implicit default `aria-checked` value of `false`. As of WAI-ARIA 1.2 this property must be explicitly set.', html: "<div role=\"checkbox\" aria-labelledby=\"label\"></div>\n<div id=\"label\">Check me</div>" }, { name: 'Failed Example 4', description: 'This `separator` does not have the required `aria-valuenow` property. This is required because the `separator` is focusable, which makes it a `widget`.', html: "<p>My first HTML</p>\n<div role=\"separator\" tabindex=\"0\"></div>\n<p>My last HTML</p>" }, { name: 'Failed Example 5', description: 'This `combobox` does not have the required `aria-expanded` property. Prior to WAI-ARIA 1.2 the `combobox` had an implicit default `aria-expanded` value of `false`. As of WAI-ARIA 1.2 this property must be explicitly set.', html: "<label for=\"tag_combo\">Tag</label>\n<input type=\"text\" id=\"tag_combo\" role=\"combobox\" aria-controls=\"popup_listbox\" />\n<ul role=\"listbox\" id=\"popup_listbox\">\n\t<li role=\"option\">Zebra</li>\n\t<li role=\"option\" id=\"selected_option\">Zoom</li>\n</ul>" }, { name: 'Failed Example 6', description: 'This `combobox` uses `aria-owns` instead of using the required `aria-controls` property.', html: "<label for=\"tag_combo\">Tag</label>\n<input type=\"text\" id=\"tag_combo\" role=\"combobox\" aria-expanded=\"true\" aria-owns=\"popup_listbox\" />\n<ul role=\"listbox\" id=\"popup_listbox\">\n\t<li role=\"option\">Zebra</li>\n\t<li role=\"option\" id=\"selected_option\">Zoom</li>\n</ul>" }]
    inapplicable: [{ name: 'Inapplicable Example 1', description: 'This `div` does not have a [semantic role](#semantic-role).', html: '<div>Some Content</div>' }, { name: 'Inapplicable Example 2', description: 'This `checkbox` has an [implicit semantic role](#implicit-role) that is identical to the [explicit semantic role](#explicit-role). This allows native HTML `checked` attribute to apply.', html: '<input type="checkbox" role="checkbox" />' }, { name: 'Inapplicable Example 3', description: 'This `combobox` is not included in the accessibility tree due to its styling, hiding it from everybody.', html: '<div role="combobox" style="display:none;"></div>' }]
expectation: 'For each test target, the WAI-ARIA required states and properties for the role are set and not empty (`""`), unless the state or property has a default value listed under WAI-ARIA implicit value for role.'
